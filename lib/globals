#!/usr/bin/env bash

########## META ##########
export DOTFILES_ROOT=$HOME/.dotfiles
export ZSH_DOTENV_PROMPT=false

########## EDITOR ##########
if [[ -n $SSH_CONNECTION ]]; then
    export EDITOR='vim'
else
    export EDITOR='code --reuse-window'
fi

########## PERSONAL ##########
export PATH="$HOME/.local/bin:$PATH"

########## HOMEBREW ##########
if brew command command-not-found-init >/dev/null 2>&1; then eval "$(brew command-not-found-init)"; fi

########## NODE ##########
export NVM_DIR="$HOME/.nvm"
[ -s "/usr/local/opt/nvm/nvm.sh" ] && . "/usr/local/opt/nvm/nvm.sh"  # This loads nvm
[ -s "/usr/local/opt/nvm/etc/bash_completion.d/nvm" ] && . "/usr/local/opt/nvm/etc/bash_completion.d/nvm"  # This loads nvm bash_completion

########## PYTHON ##########
if command -v conda 1>/dev/null 2>&1; then
    # Initialize Conda
    # !! Contents within this block are managed by 'conda init' !!
    __conda_setup="$('/usr/local/Caskroom/miniconda/base/bin/conda' 'shell.bash' 'hook' 2> /dev/null)"
    if [ $? -eq 0 ]; then
        eval "$__conda_setup"
    else
        if [ -f "/usr/local/Caskroom/miniconda/base/etc/profile.d/conda.sh" ]; then
            . "/usr/local/Caskroom/miniconda/base/etc/profile.d/conda.sh"
        else
            export PATH="/usr/local/Caskroom/miniconda/base/bin:$PATH"
        fi
    fi
    unset __conda_setup
fi

# Enable pyenv
if command -v pyenv 1>/dev/null 2>&1; then
    eval "$(pyenv init -)"
fi

# Enable Poetry
if [[ -d "$HOME/.poetry" ]]; then
    export PATH="$HOME/.poetry/bin:$PATH"
fi

# Disable global `pip install`
export PIP_REQUIRE_VIRTUALENV=true

########## RUBY ##########
if command -v rbenv 1>/dev/null 2>&1; then
    eval "$(rbenv init -)"
fi

########## RUST ##########
export PATH="$HOME/.cargo/bin:$PATH"
